<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.javayuan</groupId>
  <artifactId>Basic-SSM</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Basic-SSM Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <!-- 集中定义公用的依赖版本号 -->
  <!--版本变量设置 start-->
  <properties>
    <!--架包版本变量 start-->

    <!--2016-11-11切换到spring4试试-->
    <spring.version>4.3.3.RELEASE</spring.version>
    <mybatis.version>3.4.1</mybatis.version>
    <mybatis-spring.version>1.3.0</mybatis-spring.version>

    <junit.version>4.11</junit.version>
    <mysql-connector.version>6.0.5</mysql-connector.version>
    <druid.version>1.0.26</druid.version>

    <javaee-api.version>7.0</javaee-api.version>
    <jstl.version>1.2</jstl.version>
    <jsp-api.version>2.0</jsp-api.version>
    <servlet-api.version>2.5</servlet-api.version>

    <commons-fileupload.version>1.3.1</commons-fileupload.version>
    <commons-io.version>2.4</commons-io.version>
    <commons-lang3.version>3.3.2</commons-lang3.version>
    <commons-email.version>1.3.2</commons-email.version>
    <commons-beanutils.version>1.9.2</commons-beanutils.version>

    <httpclient.version>4.3.3</httpclient.version>
    <jackson.version>2.8.4</jackson.version>
    <fastjson.version>1.2.20</fastjson.version>
    <log4j.version>2.7</log4j.version>
    <!--架包版本变量 end-->

    <!--插件版本变量 start-->
    <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
    <jetty-plugin.version>9.3.14.v20161028</jetty-plugin.version>

    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-war-plugin.version>2.3</maven-war-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-install-plugin.version>2.4</maven-install-plugin.version>
    <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <maven-dependency-plugin.version>2.5.1</maven-dependency-plugin.version>
    <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
    <!--插件版本变量 end-->

    <!--其他变量 start-->
    <war-name.version>ssm-1</war-name.version>
    <jdk.version>1.8</jdk.version>

    <tomcat-port.version>8080</tomcat-port.version>
    <tomcat-uri-encoding.version>UTF-8</tomcat-uri-encoding.version>
    <tomcat-path.version>/</tomcat-path.version>
    <jetty-port.version>8081</jetty-port.version>
    <jetty-path.version>/</jetty-path.version>
    <!--其他变量 end-->

    <!--这个配置是为了解决下面两个警告-->
    <!--Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!-->
    <!--File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!-->
    <!--指定Maven用什么编码来读取源码及文档-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--指定Maven用什么编码来呈现站点的HTML文件-->
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

  </properties>
  <!--版本变量设置 end-->
  <!--架包依赖 start-->
  <dependencies>

    <!-- ############################################################### Spring 相关包 start ############################################################### -->
    <!--spring 源码包下载地址：https://github.com/spring-projects/spring-framework/releases-->
    <!--http://takeme.iteye.com/blog/1977585-->
    <!--http://blog.csdn.net/bluishglc/article/details/6585221-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--这个jar 文件包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持。当然，如果你的应用使用了独立的MVC 框架，则无需这个JAR 文件里的任何类。 外部依赖spring-web-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--这个jar 文件包含支持UI模版（Velocity，FreeMarker，JasperReports），邮件服务，脚本服务(JRuby)，缓存Cache（EHCache），任务计划Scheduling（uartz）方面的类。 外部依赖spring-context-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- aop -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.8.4</version>
    </dependency>
    <!-- ############################################################### Spring 相关包 end ############################################################### -->


    <!-- mybatis核心包 -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>
    <!-- mybatis/spring包 -->
    <!--官网英文材料：http://www.mybatis.org/spring/-->
    <!--官网中文资料：http://www.mybatis.org/spring/zh/index.html-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis-spring.version}</version>
    </dependency>


    <!-- 导入Mysql数据库链接jar包 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <!--这个组件具体可以看这里介绍:http://www.oschina.net/p/druid-->
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <!-- JSTL标签类 -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${jsp-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- java ee jar 包 -->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${javaee-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--单元测试-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- 日志文件管理包 start -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>

    <!-- 日志文件管理包 end -->

    <!--JSON处理-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- 上传组件包 -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons-fileupload.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>


    <!--apache工具包-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>


  </dependencies>
  <!--架包依赖 end-->


  <!--设置项目编译级别等设置 start-->
  <build>
    <finalName>${project.artifactId}</finalName>
    <resources>
      <!--表示把java目录下的有关xml文件,properties文件编译/打包的时候放在resource目录下-->
      <resource>
        <directory>${basedir}/src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <!-- Compiler 插件, 设定JDK版本 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>UTF-8</encoding>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <!-- war 打包插件, 设定war包名称不带版本号 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <warName>${war-name.version}</warName>
        </configuration>
      </plugin>


      <!--tomcat7插件-->
      <!--https://tomcat.apache.org/maven-plugin-2.0/tomcat7-maven-plugin/run-mojo.html-->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>${tomcat7-maven-plugin.version}</version>
        <configuration>
          <path>${tomcat-path.version}</path>
          <port>${tomcat-port.version}</port>
          <uriEncoding>${tomcat-uri-encoding.version}</uriEncoding>
          <url>http://localhost:8080/manager/text</url>
          <server>tomcat7</server>
          <username>admin</username>
          <password>admin</password>
        </configuration>
      </plugin>

      <!--jetty插件-->
      <!--http://www.eclipse.org/jetty/documentation/9.0.0.M3/jetty-maven-plugin.html-->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty-plugin.version}</version>
        <configuration>
          <stopKey>foo</stopKey>
          <stopPort>9999</stopPort>
          <httpConnector>
            <port>${jetty-port.version}</port>
          </httpConnector>
          <webApp>
            <!--访问地址：http://localhost:8081/index.jsp-->
            <!--如果不带index.jsp会直接报404，这个一直没找到原因-->
            <contextPath>${jetty-path.version}</contextPath>
          </webApp>
          <!--scanIntervalSeconds 可选[秒]。在很短的时间间隔内在扫描web应用检查是否有改变，如果发觉有任何改变则自动热部署。默认为0，表示禁用热部署检查。任何一个大于0的数字都将表示启用。-->
          <scanIntervalSeconds>10</scanIntervalSeconds>
        </configuration>
      </plugin>


      <!-- resource插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
      </plugin>

      <!-- source插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
      </plugin>

      <!-- install插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven-install-plugin.version}</version>
      </plugin>

      <!-- clean插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
      </plugin>

      <!-- ant插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
      </plugin>

      <!-- dependency插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
      </plugin>

    </plugins>
  </build>
  <!--设置项目编译级别等设置 end-->
</project>
